import groovy.json.JsonSlurper
import java.text.DateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.greenhouseci.androidtests"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1

        def myVersionString
        if (System.getenv()["CI"]) {
            def plainFormatter = DateFormat.instance
            def today = new Date()
            myVersionString = plainFormatter.format(today)
        } else {
            myVersionString = "1.0"
        }
        versionName myVersionString

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:design:25.1.1'
    testCompile 'junit:junit:4.12'
}

// task myCustomTask << {
//     def envVars = [:]
//     System.getenv().each { k, v ->
//         println "${k} = ${v}"
//         envVars."$k" = v
//     }
//     println ""
//     println envVars
// }

//task sayAssembleStarted << {
//    println "==========================================="
//    println "Build Started!"
//    println "==========================================="
//}
//
//task assembleAndNotify << {
//    def req = ['curl', 'http://httpbin.org/post', '-d', 'build=completed', '-X', 'POST']
//    def resp = req.execute()
//    def respData = new JsonSlurper().parseText(resp.text)
//    println "==========================================="
//    println "Notify response was:"
//    respData.each {k, v ->
//        println "  $k -> $v"
//    }
//    println "==========================================="
//}
//assembleAndNotify.group = "Build"
//
//
//gradle.projectsEvaluated {
//    assemble.dependsOn(sayAssembleStarted)
//    assembleAndNotify.dependsOn(assemble)
//}
